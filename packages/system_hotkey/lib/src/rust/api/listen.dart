// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.4.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'listen.freezed.dart';

// These functions are ignored because they are not marked as `pub`: `from`, `rdev_button2_raw_button`, `rdev_key2_raw_key`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `assert_receiver_is_total_eq`, `assert_receiver_is_total_eq`, `clone`, `clone`, `clone`, `eq`, `eq`, `eq`, `fmt`, `fmt`, `fmt`, `hash`, `hash`

Future<ShortcutListener> startListener() =>
    RustLib.instance.api.crateApiListenStartListener();

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ShortcutListener>>
abstract class ShortcutListener implements RustOpaqueInterface {
  // HINT: Make it `#[frb(sync)]` to let it become the default constructor of Dart class.
  static Future<ShortcutListener> newInstance() =>
      RustLib.instance.api.crateApiListenShortcutListenerNew();

  Stream<RawEventType> startListener();

  Future<void> stopListener();

  Future<void> unregisterAllHotkeys();
}

@freezed
sealed class RawButton with _$RawButton {
  const RawButton._();

  const factory RawButton.left() = RawButton_Left;
  const factory RawButton.right() = RawButton_Right;
  const factory RawButton.middle() = RawButton_Middle;
  const factory RawButton.unknown(
    int field0,
  ) = RawButton_Unknown;
}

@freezed
sealed class RawEventType with _$RawEventType {
  const RawEventType._();

  /// The keys correspond to a standard qwerty layout, they don't correspond
  /// To the actual letter a user would use, that requires some layout logic to be added.
  const factory RawEventType.keyPress(
    RawKey field0,
  ) = RawEventType_KeyPress;
  const factory RawEventType.keyRelease(
    RawKey field0,
  ) = RawEventType_KeyRelease;

  /// Mouse Button
  const factory RawEventType.buttonPress(
    RawButton field0,
  ) = RawEventType_ButtonPress;
  const factory RawEventType.buttonRelease(
    RawButton field0,
  ) = RawEventType_ButtonRelease;

  /// Values in pixels. `EventType::MouseMove{x: 0, y: 0}` corresponds to the
  /// top left corner, with x increasing downward and y increasing rightward
  const factory RawEventType.mouseMove({
    required double x,
    required double y,
  }) = RawEventType_MouseMove;

  /// `delta_y` represents vertical scroll and `delta_x` represents horizontal scroll.
  /// Positive values correspond to scrolling up or right and negative values
  /// correspond to scrolling down or left
  const factory RawEventType.wheel({
    required PlatformInt64 deltaX,
    required PlatformInt64 deltaY,
  }) = RawEventType_Wheel;
}

@freezed
sealed class RawKey with _$RawKey {
  const RawKey._();

  /// Alt key on Linux and Windows (option key on macOS)
  const factory RawKey.alt() = RawKey_Alt;
  const factory RawKey.altGr() = RawKey_AltGr;
  const factory RawKey.backspace() = RawKey_Backspace;
  const factory RawKey.capsLock() = RawKey_CapsLock;
  const factory RawKey.controlLeft() = RawKey_ControlLeft;
  const factory RawKey.controlRight() = RawKey_ControlRight;
  const factory RawKey.delete() = RawKey_Delete;
  const factory RawKey.downArrow() = RawKey_DownArrow;
  const factory RawKey.end() = RawKey_End;
  const factory RawKey.escape() = RawKey_Escape;
  const factory RawKey.f1() = RawKey_F1;
  const factory RawKey.f10() = RawKey_F10;
  const factory RawKey.f11() = RawKey_F11;
  const factory RawKey.f12() = RawKey_F12;
  const factory RawKey.f2() = RawKey_F2;
  const factory RawKey.f3() = RawKey_F3;
  const factory RawKey.f4() = RawKey_F4;
  const factory RawKey.f5() = RawKey_F5;
  const factory RawKey.f6() = RawKey_F6;
  const factory RawKey.f7() = RawKey_F7;
  const factory RawKey.f8() = RawKey_F8;
  const factory RawKey.f9() = RawKey_F9;
  const factory RawKey.home() = RawKey_Home;
  const factory RawKey.leftArrow() = RawKey_LeftArrow;

  /// also known as "windows", "super", and "command"
  const factory RawKey.metaLeft() = RawKey_MetaLeft;

  /// also known as "windows", "super", and "command"
  const factory RawKey.metaRight() = RawKey_MetaRight;
  const factory RawKey.pageDown() = RawKey_PageDown;
  const factory RawKey.pageUp() = RawKey_PageUp;
  const factory RawKey.return_() = RawKey_Return;
  const factory RawKey.rightArrow() = RawKey_RightArrow;
  const factory RawKey.shiftLeft() = RawKey_ShiftLeft;
  const factory RawKey.shiftRight() = RawKey_ShiftRight;
  const factory RawKey.space() = RawKey_Space;
  const factory RawKey.tab() = RawKey_Tab;
  const factory RawKey.upArrow() = RawKey_UpArrow;
  const factory RawKey.printScreen() = RawKey_PrintScreen;
  const factory RawKey.scrollLock() = RawKey_ScrollLock;
  const factory RawKey.pause() = RawKey_Pause;
  const factory RawKey.numLock() = RawKey_NumLock;
  const factory RawKey.backQuote() = RawKey_BackQuote;
  const factory RawKey.num1() = RawKey_Num1;
  const factory RawKey.num2() = RawKey_Num2;
  const factory RawKey.num3() = RawKey_Num3;
  const factory RawKey.num4() = RawKey_Num4;
  const factory RawKey.num5() = RawKey_Num5;
  const factory RawKey.num6() = RawKey_Num6;
  const factory RawKey.num7() = RawKey_Num7;
  const factory RawKey.num8() = RawKey_Num8;
  const factory RawKey.num9() = RawKey_Num9;
  const factory RawKey.num0() = RawKey_Num0;
  const factory RawKey.minus() = RawKey_Minus;
  const factory RawKey.equal() = RawKey_Equal;
  const factory RawKey.keyQ() = RawKey_KeyQ;
  const factory RawKey.keyW() = RawKey_KeyW;
  const factory RawKey.keyE() = RawKey_KeyE;
  const factory RawKey.keyR() = RawKey_KeyR;
  const factory RawKey.keyT() = RawKey_KeyT;
  const factory RawKey.keyY() = RawKey_KeyY;
  const factory RawKey.keyU() = RawKey_KeyU;
  const factory RawKey.keyI() = RawKey_KeyI;
  const factory RawKey.keyO() = RawKey_KeyO;
  const factory RawKey.keyP() = RawKey_KeyP;
  const factory RawKey.leftBracket() = RawKey_LeftBracket;
  const factory RawKey.rightBracket() = RawKey_RightBracket;
  const factory RawKey.keyA() = RawKey_KeyA;
  const factory RawKey.keyS() = RawKey_KeyS;
  const factory RawKey.keyD() = RawKey_KeyD;
  const factory RawKey.keyF() = RawKey_KeyF;
  const factory RawKey.keyG() = RawKey_KeyG;
  const factory RawKey.keyH() = RawKey_KeyH;
  const factory RawKey.keyJ() = RawKey_KeyJ;
  const factory RawKey.keyK() = RawKey_KeyK;
  const factory RawKey.keyL() = RawKey_KeyL;
  const factory RawKey.semiColon() = RawKey_SemiColon;
  const factory RawKey.quote() = RawKey_Quote;
  const factory RawKey.backSlash() = RawKey_BackSlash;
  const factory RawKey.intlBackslash() = RawKey_IntlBackslash;
  const factory RawKey.keyZ() = RawKey_KeyZ;
  const factory RawKey.keyX() = RawKey_KeyX;
  const factory RawKey.keyC() = RawKey_KeyC;
  const factory RawKey.keyV() = RawKey_KeyV;
  const factory RawKey.keyB() = RawKey_KeyB;
  const factory RawKey.keyN() = RawKey_KeyN;
  const factory RawKey.keyM() = RawKey_KeyM;
  const factory RawKey.comma() = RawKey_Comma;
  const factory RawKey.dot() = RawKey_Dot;
  const factory RawKey.slash() = RawKey_Slash;
  const factory RawKey.insert() = RawKey_Insert;
  const factory RawKey.kpReturn() = RawKey_KpReturn;
  const factory RawKey.kpMinus() = RawKey_KpMinus;
  const factory RawKey.kpPlus() = RawKey_KpPlus;
  const factory RawKey.kpMultiply() = RawKey_KpMultiply;
  const factory RawKey.kpDivide() = RawKey_KpDivide;
  const factory RawKey.kp0() = RawKey_Kp0;
  const factory RawKey.kp1() = RawKey_Kp1;
  const factory RawKey.kp2() = RawKey_Kp2;
  const factory RawKey.kp3() = RawKey_Kp3;
  const factory RawKey.kp4() = RawKey_Kp4;
  const factory RawKey.kp5() = RawKey_Kp5;
  const factory RawKey.kp6() = RawKey_Kp6;
  const factory RawKey.kp7() = RawKey_Kp7;
  const factory RawKey.kp8() = RawKey_Kp8;
  const factory RawKey.kp9() = RawKey_Kp9;
  const factory RawKey.kpDelete() = RawKey_KpDelete;
  const factory RawKey.function() = RawKey_Function;
  const factory RawKey.unknown(
    int field0,
  ) = RawKey_Unknown;
}
